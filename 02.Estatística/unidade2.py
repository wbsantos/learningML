import math

# Numa tentativa de melhorar o esquema de atendimento, 
# um médico procurou estimar o tempo médio que gasta com cada paciente. 
# Uma amostra aleatória de 29 pacientes, colhida num período de três semanas, 
# acusou uma média de 30 minutos, com desvio padrão de 7 minutos. 
# Construa um intervalo de 95% de confiança para o verdadeiro tempo médio de consulta.

t = [
[None,0.25,0.125,0.1,0.05,0.025,0.0125,0.01,0.005,0.0025,0.001,0.0005		],
[1,1,2.414,3.078,6.314,12.71,25.45,31.82,63.66,127.3,318.3,636.6            ],
[2,0.817,1.604,1.8856,2.92,4.303,6.205,6.965,9.925,14.09,22.33,31.6         ],
[3,0.765,1.423,1.6377,2.3534,3.182,4.177,4.541,5.841,7.453,10.21,12.92      ],
[4,0.741,1.344,1.5332,2.1319,2.776,3.495,3.747,4.604,5.598,7.173,8.61       ],
[5,0.727,1.301,1.4759,2.0151,2.571,3.163,3.365,4.032,4.773,5.893,6.869      ],
[6,0.718,1.273,1.4398,1.9432,2.447,2.969,3.143,3.707,4.317,5.208,5.959      ],
[7,0.711,1.254,1.4149,1.8946,2.365,2.841,2.998,3.499,4.029,4.785,5.408      ],
[8,0.706,1.24,1.3968,1.8596,2.306,2.752,2.896,3.355,3.833,4.501,5.041       ],
[9,0.703,1.23,1.383,1.8331,2.262,2.685,2.821,3.25,3.69,4.297,4.781          ],
[10,0.7,1.221,1.3722,1.8125,2.228,2.634,2.764,3.169,3.581,4.144,4.587       ],
[11,0.697,1.214,1.3634,1.7959,2.201,2.593,2.718,3.106,3.497,4.025,4.437     ],
[12,0.695,1.209,1.3562,1.7823,2.179,2.56,2.681,3.055,3.428,3.93,4.318       ],
[13,0.694,1.204,1.3502,1.7709,2.16,2.533,2.65,3.012,3.372,3.852,4.221       ],
[14,0.692,1.2,1.345,1.7613,2.145,2.51,2.625,2.977,3.326,3.787,4.14          ],
[15,0.691,1.197,1.3406,1.7531,2.131,2.49,2.602,2.947,3.286,3.733,4.073      ],
[16,0.69,1.194,1.3368,1.7459,2.12,2.473,2.583,2.921,3.252,3.686,4.015       ],
[17,0.689,1.191,1.3334,1.7396,2.11,2.458,2.567,2.898,3.222,3.646,3.965      ],
[18,0.688,1.189,1.3304,1.7341,2.101,2.445,2.552,2.878,3.197,3.611,3.922     ],
[19,0.688,1.187,1.3277,1.7291,2.093,2.433,2.539,2.861,3.174,3.579,3.883     ],
[20,0.687,1.185,1.3253,1.7247,2.086,2.423,2.528,2.845,3.153,3.552,3.85      ],
[21,0.686,1.183,1.3232,1.7208,2.08,2.414,2.518,2.831,3.135,3.527,3.819      ],
[22,0.686,1.182,1.3212,1.7172,2.074,2.405,2.508,2.819,3.119,3.505,3.792     ],
[23,0.685,1.18,1.3195,1.7139,2.069,2.398,2.5,2.807,3.104,3.485,3.768        ],
[24,0.685,1.179,1.3178,1.7109,2.064,2.391,2.492,2.797,3.091,3.467,3.745     ],
[25,0.684,1.178,1.3164,1.7081,2.06,2.385,2.485,2.787,3.078,3.45,3.725       ],
[26,0.684,1.177,1.315,1.7056,2.056,2.379,2.479,2.779,3.067,3.435,3.707      ],
[27,0.684,1.176,1.3137,1.7033,2.052,2.373,2.473,2.771,3.057,3.421,3.69      ],
[28,0.683,1.175,1.3125,1.7011,2.048,2.368,2.467,2.763,3.047,3.408,3.674     ],
[29,0.683,1.174,1.3114,1.6991,2.045,2.364,2.462,2.756,3.038,3.396,3.659     ],
[30,0.683,1.173,1.3104,1.6973,2.042,2.36,2.457,2.75,3.03,3.385,3.646        ],
[31,0.682,1.172,1.3095,1.6955,2.04,2.356,2.453,2.744,3.022,3.375,3.633      ],
[32,0.682,1.172,1.3086,1.6939,2.037,2.352,2.449,2.738,3.015,3.365,3.622     ],
[33,0.682,1.171,1.3077,1.6924,2.035,2.348,2.445,2.733,3.008,3.356,3.611     ],
[34,0.682,1.17,1.307,1.6909,2.032,2.345,2.441,2.728,3.002,3.348,3.601       ],
[35,0.682,1.17,1.3062,1.6896,2.03,2.342,2.438,2.724,2.996,3.34,3.591        ]]

z = [
[0.0000,	0.0040,	0.0080,	0.0120,	0.0160,	0.0199,	0.0239,	0.0279,	0.0319,	0.0359],
[0.0398,	0.0438,	0.0478,	0.0517,	0.0557,	0.0596,	0.0636,	0.0675,	0.0714,	0.0753],
[0.0793,	0.0832,	0.0871,	0.0910,	0.0948,	0.0987,	0.1026,	0.1064,	0.1103,	0.1141],
[0.1179,	0.1217,	0.1255,	0.1293,	0.1331,	0.1368,	0.1406,	0.1443,	0.1480,	0.1517],
[0.1554,	0.1591,	0.1628,	0.1664,	0.1700,	0.1736,	0.1772,	0.1808,	0.1844,	0.1879],
[0.1915,	0.1950,	0.1985,	0.2019,	0.2054,	0.2088,	0.2123,	0.2157,	0.2190,	0.2224],
[0.2257,	0.2291,	0.2324,	0.2357,	0.2389,	0.2422,	0.2454,	0.2486,	0.2517,	0.2549],
[0.2580,	0.2611,	0.2642,	0.2673,	0.2704,	0.2734,	0.2764,	0.2794,	0.2823,	0.2852],
[0.2881,	0.2910,	0.2939,	0.2967,	0.2995,	0.3023,	0.3051,	0.3078,	0.3106,	0.3133],
[0.3159,	0.3186,	0.3212,	0.3238,	0.3264,	0.3289,	0.3315,	0.3340,	0.3365,	0.3389],
[0.3413,	0.3438,	0.3461,	0.3485,	0.3508,	0.3531,	0.3554,	0.3577,	0.3599,	0.3621],
[0.3643,	0.3665,	0.3686,	0.3708,	0.3729,	0.3749,	0.3770,	0.3790,	0.3810,	0.3830],
[0.3849,	0.3869,	0.3888,	0.3907,	0.3925,	0.3944,	0.3962,	0.3980,	0.3997,	0.4015],
[0.4032,	0.4049,	0.4066,	0.4082,	0.4099,	0.4115,	0.4131,	0.4147,	0.4162,	0.4177],
[0.4192,	0.4207,	0.4222,	0.4236,	0.4251,	0.4265,	0.4279,	0.4292,	0.4306,	0.4319],
[0.4332,	0.4345,	0.4357,	0.4370,	0.4382,	0.4394,	0.4406,	0.4418,	0.4429,	0.4441],
[0.4452,	0.4463,	0.4474,	0.4484,	0.4495,	0.4505,	0.4515,	0.4525,	0.4535,	0.4545],
[0.4554,	0.4564,	0.4573,	0.4582,	0.4591,	0.4599,	0.4608,	0.4616,	0.4625,	0.4633],
[0.4641,	0.4649,	0.4656,	0.4664,	0.4671,	0.4678,	0.4686,	0.4693,	0.4699,	0.4706],
[0.4713,	0.4719,	0.4726,	0.4732,	0.4738,	0.4744,	0.4750,	0.4756,	0.4761,	0.4767],
[0.4772,	0.4778,	0.4783,	0.4788,	0.4793,	0.4798,	0.4803,	0.4808,	0.4812,	0.4817],
[0.4821,	0.4826,	0.4830,	0.4834,	0.4838,	0.4842,	0.4846,	0.4850,	0.4854,	0.4857],
[0.4861,	0.4864,	0.4868,	0.4871,	0.4875,	0.4878,	0.4881,	0.4884,	0.4887,	0.4890],
[0.4893,	0.4896,	0.4898,	0.4901,	0.4904,	0.4906,	0.4909,	0.4911,	0.4913,	0.4916],
[0.4918,	0.4920,	0.4922,	0.4925,	0.4927,	0.4929,	0.4931,	0.4932,	0.4934,	0.4936],
[0.4938,	0.4940,	0.4941,	0.4943,	0.4945,	0.4946,	0.4948,	0.4949,	0.4951,	0.4952],
[0.4953,	0.4955,	0.4956,	0.4957,	0.4959,	0.4960,	0.4961,	0.4962,	0.4963,	0.4964],
[0.4965,	0.4966,	0.4967,	0.4968,	0.4969,	0.4970,	0.4971,	0.4972,	0.4973,	0.4974],
[0.4974,	0.4975,	0.4976,	0.4977,	0.4977,	0.4978,	0.4979,	0.4979,	0.4980,	0.4981],
[0.4981,	0.4982,	0.4982,	0.4983,	0.4984,	0.4984,	0.4985,	0.4985,	0.4986,	0.4986],
[0.4987,	0.4987,	0.4987,	0.4988,	0.4988,	0.4989,	0.4989,	0.4989,	0.4990,	0.4990],
[0.4990,	0.4991,	0.4991,	0.4991,	0.4992,	0.4992,	0.4992,	0.4992,	0.4993,	0.4993],
[0.4993,	0.4993,	0.4994,	0.4994,	0.4994,	0.4994,	0.4994,	0.4995,	0.4995,	0.4995],
[0.4995,	0.4995,	0.4995,	0.4996,	0.4996,	0.4996,	0.4996,	0.4996,	0.4996,	0.4997],
[0.4997,	0.4997,	0.4997,	0.4997,	0.4997,	0.4997,	0.4997,	0.4997,	0.4997,	0.4998],
[0.4998,	0.4998,	0.4998,	0.4998,	0.4998,	0.4998,	0.4998,	0.4998,	0.4998,	0.4998]]

def T(n, alpha):
    alpha = round(0.5 - abs(alpha / 2), 3)
    ri = -1
    rj =  -1
    
    for j in range(len(t[0])):
        if(alpha == t[0][j]):
            rj = j
            break
    for i in range(len(t)):
        if(n == t[i][0]):
            ri = i
            break
    if(ri == -1 or rj == -1):
        print('ERROR!!!!!!!')
    return t[ri][rj]

def Z(alpha):
    alpha = abs(alpha / 2.0)
    ri = 0
    rj = 0
    rdiff = 2
    for i in range(len(z)):
        for j in range(len(z[i])):
            diff = abs(z[i][j] - alpha)
            if(diff < rdiff):
                ri = i
                rj = j
                rdiff = diff
    return round(ri * 0.1 + rj * 0.01, 2)

def distribuicaoBinomial(amostra, probabilidadeDeOcorrencia, totalOcorrenciasParaTestar): #p = probabilidade
    n = amostra
    p = probabilidadeDeOcorrencia
    x = totalOcorrenciasParaTestar
    coeficiente = math.factorial(n) / (math.factorial(x) * math.factorial(n - x))
    media = n * p
    q = 1 - p
    variancia = n * p * q
    desvioPadrao = variancia ** (1/2)
    
    return coeficiente * (p ** x) * (q ** (n - x))

def distribuicaoPoisson(mediaParaTestar, mediaReal):#
    return ((math.e ** (-mediaReal)) * (mediaReal ** mediaParaTestar)) / math.factorial(mediaParaTestar)

def distribuicaoExponencial(parametro, base, topo): #considerar usar complemento quando necessário
    return ((math.exp(parametro * base)) - math.exp(-parametro * topo))

def distribuicaoNormalPadrao(desvioPadrao, xParaTestar, media):#considerar usar complemento quando necessário
    x = xParaTestar
    z = (x - media) / desvioPadrao
    #z * desvioPadrao + media = x
    print('Procurar Z na tabela: ')
    return z

#print(distribuicaoPoisson(50, 40))
#print(distribuicaoBinomial(10, 0.3, 3)+distribuicaoBinomial(10, 0.3, 4)+distribuicaoBinomial(10, 0.3, 5))
#print(distribuicaoExponencial(3, 0, 1))
#print(distribuicaoNormalPadrao(0.01, 7.52, 7.505))
#print(distribuicaoBinomial(14, 0.6, 13) + distribuicaoBinomial(14, 0.6, 14))
print(distribuicaoNormalPadrao(2.5, 165, 170))